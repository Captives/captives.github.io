(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-58088501"],{"4a1b":function(e,t,n){},be01:function(e,t,n){"use strict";var o=n("4a1b"),r=n.n(o);r.a},c65d:function(e,t,n){"use strict";n.r(t);var o=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("el-main",[n("el-row",[n("h3",[n("router-link",{attrs:{to:"/webrtc/list"}},[e._v("Enumerate devices")])],1),n("vue-code",[n("pre",{attrs:{lang:"javascript"}},[e._v("navigator.mediaDevices.enumerateDevices().then(deviceInfos =>{\n  console.log(deviceInfos);\n}).catch(error => {\n  ...\n});\n        ")])])],1),n("el-row",[n("h3",[n("router-link",{attrs:{to:"/webrtc/stream-from-usermedia"}},[e._v("Stream from UserMedia")])],1),n("vue-code",[n("pre",{attrs:{lang:"javascript"}},[e._v("navigator.mediaDevices.getUserMedia({ video:true, audio:true }).then((stream) => {\n  stream.oninactive = function () {\n    console.log('Stream inactive - stop!');\n  };\n\n  if ('srcObject' in video) {\n      video.srcObject = stream;\n  } else {\n      video.src = URL.createObjectURL(stream);\n  }\n}).catch(function (error) {\n  console.log('navigator.getUserMedia error: ', error);\n});\n")])])],1),n("el-row",[n("h3",[n("router-link",{attrs:{to:"/webrtc/stream-from-displaymedia"}},[e._v("Stream from DisplayMedia")])],1),n("vue-code",[n("pre",{attrs:{lang:"javascript"}},[e._v("getDisplayMedia() {\n    if (navigator.getDisplayMedia) {\n        return navigator.getDisplayMedia({ video: true });\n    } else if (navigator.mediaDevices.getDisplayMedia) {\n        return navigator.mediaDevices.getDisplayMedia({ video: true });\n    } else {\n        return navigator.mediaDevices.getUserMedia({ video: { mediaSource: 'screen' } });\n    }\n},\n\ngetDisplayMedia().then((stream) => {\n    stream.oninactive = function () {\n      console.log('Capture stream inactive - stop recording!');\n    };\n\n    if ('srcObject' in video) {\n        video.srcObject = stream;\n    } else {\n        video.src = URL.createObjectURL(stream);\n    }\n  }).catch(function (error) {\n    console.log('navigator.getUserMedia error: ', error);\n  });\n")])])],1),n("el-row",[n("h3",[n("router-link",{attrs:{to:"/webrtc/stream-from-video"}},[e._v("Stream from video element")])],1),n("vue-code",[n("pre",{attrs:{lang:"javascript"}},[e._v("const video = this.$refs.localVideo;\nvideo.addEventListener('canplay', () => {\n  const fps = 0;\n  const player = this.$refs.playVideo;\n  if (video.captureStream) {\n    this.stream = video.captureStream(fps);\n  } else if (video.mozCaptureStream) {\n    this.stream = video.mozCaptureStream(fps);\n  } else {\n    console.error('Stream capture is not supported');\n    this.stream = null;\n  }\n\n  if ('srcObject' in video) {\n      player.srcObject = this.stream;\n  } else {\n      player.src = URL.createObjectURL(this.stream);\n  }\n});\n")])])],1),n("el-row",[n("h3",[n("router-link",{attrs:{to:"/webrtc/stream-from-canvas"}},[e._v("Stream from canvas element")])],1),n("vue-code",[n("pre",{attrs:{lang:"javascript"}},[e._v("const stream = canvas.captureStream();\nif ('srcObject' in video) {\n    video.srcObject = stream;\n} else {\n    video.src = URL.createObjectURL(stream);\n}\n")])])],1),n("el-row",[n("h3",[n("router-link",{attrs:{to:"/webrtc/remote"}},[e._v("Vue use MediaStream")])],1),n("vue-code",[n("pre",{attrs:{lang:"html"}},[e._v('<video :srcObject.prop="localStream" autoplay></video>\n')])])],1),n("el-row",[n("h3",[n("router-link",{attrs:{to:"/webrtc/audiooutput"}},[e._v("Choose media source and audio output")])],1),n("el-row",[e._v(" 该"),n("em",[e._v("HTMLMediaElement.setSinkId()")]),e._v("方法设置用于输出的音频设备的ID，并返回 Promise。仅当授权该应用程序使用指定设备时，此方法才有效。 ")]),n("vue-code",[n("pre",{attrs:{lang:"javascript"}},[e._v("playback(videoElement, deviceId) {\n  if (typeof videoElement.sinkId !== 'undefined') {\n    videoElement.setSinkId(deviceId).then(() => {\n      console.log(`Success, audio output device attached: ${deviceId}`);\n    }).catch(error => {\n      let errorMessage = error;\n      if (error.name === 'SecurityError') {\n        errorMessage = `You need to use HTTPS for selecting audio output device: ${error}`;\n      }\n      console.error(errorMessage);\n      // Use default device\n    });\n  } else {\n    console.warn('Browser does not support output device selection.');\n  }\n}\n")])])],1),n("el-row",[n("h3",[n("router-link",{attrs:{to:"/webrtc/stream-from-displaymedia"}},[e._v("Close video stream")])],1),n("vue-code",[n("pre",{attrs:{lang:"javascript"}},[e._v("stream.getTracks().forEach(track => track.stop());\n")])])],1),n("el-row",[n("h3",[n("router-link",{attrs:{to:"/webrtc/recorder"}},[e._v("Recording media streaming to blob")])],1),n("vue-code",[n("pre",{attrs:{lang:"javascript"}},[e._v("data() {\n    return {\n        recordBlobs: [],\n        recording: false,\n        mediaRecorder: null,\n        error: null\n    }\n},\nstartRecoding(stream) {\n  this.recordBlobs = [];\n  var options = { mimeType: 'video/webm;codecs=vp9' };\n  if (!MediaRecorder.isTypeSupported(options.mimeType)) {\n    console.log(options.mimeType + ' is not Supported');\n    options = { mimeType: 'video/webm;codecs=vp8' };\n\n    if (!MediaRecorder.isTypeSupported(options.mimeType)) {\n      console.log(options.mimeType + ' is not Supported');\n      options = { mimeType: 'video/webm' };\n\n      if (!MediaRecorder.isTypeSupported(options.mimeType)) {\n        console.log(options.mimeType + ' is not Supported');\n        options = { mimeType: '' };\n      }\n    }\n  }\n\n  try {\n    this.mediaRecorder = new MediaRecorder(stream, options);\n  } catch (e) {\n    alert('Exception while creating MediaRecorder: ' + e + '. mimeType: ' + options.mimeType);\n  }\n\n  console.log('Created MediaRecorder', this.mediaRecorder, 'with options', options);\n  this.mediaRecorder.onstart = (event) => {\n    this.recording = true;\n  };\n\n  this.mediaRecorder.onstop = (event) => {\n    this.recording = false;\n    console.log('Recorder stopped: ', event);\n  };\n\n  this.mediaRecorder.ondataavailable = (event) => {\n    if (event.data && event.data.size > 0) {\n      this.recordBlobs.push(event.data);\n    }\n  };\n\n  this.mediaRecorder.onerror = event => {\n    this.error = event;\n  }\n\n  this.mediaRecorder.start(10); // 数据收集10ms\n  console.log('MediaRecorder started', this.mediaRecorder);\n},\nstopRecoder() {\n  if (this.mediaRecorder && this.recording) {\n    this.mediaRecorder.stop();\n  }\n},\n")])])],1),n("el-row",[n("h3",[n("router-link",{attrs:{to:"/webrtc/recorder"}},[e._v("Play blob media stream")])],1),n("vue-code",[n("pre",{attrs:{lang:"javascript"}},[e._v("data() {\n    return {\n        recordBlobs: [],\n        error: null\n    }\n},\nplayStream() {\n    //播放\n    const video = this.$refs.playVideo;\n    video.addEventListener('loadedmetadata', event => {\n        console.log(\"loadedmetadata\", video.currentTime, video.duration);\n        if (video.duration === Infinity) {\n            video.currentTime = 1e101;\n            video.ontimeupdate = function () {\n                video.currentTime = 0;\n                video.ontimeupdate = function () {\n                    delete video.ontimeupdate;\n                    video.play();\n                };\n            };\n        }\n    });\n\n    if (this.recordBlobs && this.recordBlobs.length) {\n        const blob = new Blob(this.recordBlobs, { type: 'video/webm' });\n        video.src = window.URL.createObjectURL(blob);\n    }\n}\n")])])],1),n("el-row",[n("h3",[n("router-link",{attrs:{to:"/webrtc/recorder"}},[e._v("Download blob media stream")])],1),n("vue-code",[n("pre",{attrs:{lang:"javascript"}},[e._v("data() {\n    return {\n        recordBlobs: [],\n        error: null\n    }\n},\ndownloadfile() {\n  if (this.recordBlobs && this.recordBlobs.length) {\n    const blob = new Blob(this.recordBlobs, { type: 'video/webm' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.style.display = 'none';\n    a.href = url;\n    a.download = 'Rec_' + Date.now() + '.webm';\n    document.body.appendChild(a);\n    a.click();\n    setTimeout(() => {\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n    }, 100);\n  }\n}\n")])])],1),n("h3",[e._v("多路音频流混合")]),n("p"),n("vue-code",[n("pre",{attrs:{lang:"javascript"}},[e._v("let videos = [];\nlet audioSources = [];\n\n// WebAudio API representer\nvar AudioContext = window.AudioContext;\nif (typeof AudioContext === 'undefined') {\n    if (typeof webkitAudioContext !== 'undefined') {\n        /*global AudioContext:true */\n        AudioContext = webkitAudioContext;\n    }\n\n    if (typeof mozAudioContext !== 'undefined') {\n        /*global AudioContext:true */\n        AudioContext = mozAudioContext;\n    }\n}\n\nlet audioContext = new AudioContext();\nlet audioDestination = audioContext.createMediaStreamDestination()\nstreams.forEach(function(stream) {\n    if (stream.getVideoTracks().length) {\n        var video = getVideo(stream);\n        video.stream = stream;\n        videos.push(video);\n    }\n\n    if (stream.getAudioTracks().length && audioContext) {\n        var audioSource = audioContext.createMediaStreamSource(stream);\n        audioSource.connect(audioDestination);\n        audioSources.push(audioSource);\n    }\n});\n\n//获取合并后的音频流\nlet audioDestination = audioContext.createMediaStreamDestination();\naudioSources.forEach(function(audioSource) {\n    audioSource.connect(audioDestination);\n});\nlet stream:MediaStream = audioDestination.stream;\n      ")])]),n("el-row",[n("h3",[e._v("资料")]),n("ul",[n("li",[n("el-link",{attrs:{href:"https://www.webrtc-experiment.com/"}},[e._v("WebRTC Experiment")])],1),n("li",[n("el-link",{attrs:{href:"https://www.webrtc-experiment.com/RecordRTC/"}},[e._v("RecordRTC")])],1),n("li",[n("el-link",{attrs:{href:"https://quickblox.com/developers/Sample-videochat-web"}},[e._v("Sample Webrtc Web")])],1)])])],1)},r=[],i={name:"index"},a=i,s=(n("be01"),n("2877")),d=Object(s["a"])(a,o,r,!1,null,"f0bd71b8",null);t["default"]=d.exports}}]);