(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0b9b9a"],{"33bf":function(n,e,o){"use strict";o.r(e);var r=function(){var n=this,e=n.$createElement,o=n._self._c||e;return o("el-main",[o("el-row",{staticClass:"content"},[o("h1",[o("el-link",{attrs:{href:"https://vue-apollo.netlify.com/zh-cn/"}},[n._v("Vue Apollo Client")])],1),o("p",[n._v("main.ts")]),o("vue-code",[o("pre",{attrs:{lang:"javascript"}},[n._v("import VueApollo from 'vue-apollo';\nimport { ApolloClient } from 'apollo-client';\nimport { ApolloLink } from 'apollo-link';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { onError } from \"apollo-link-error\";\n\nconst middlewareLink = new ApolloLink((operation, forward) => {\n  const token = sessionStorage.getItem('token');\n  if (token && (token !== 'undefined')) {\n    operation.setContext({\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    });\n  }\n\n  return forward(operation).map((response) => {\n    return response;\n  });\n});\n\nconst errorLink = onError(({ graphQLErrors, networkError }: any) => {\n  if (graphQLErrors && graphQLErrors.length > 0) {\n    graphQLErrors.forEach((error: any) => {\n      if (error.code === 403) {\n        window.location.href = \"/\";\n      }\n    });\n  }\n\n  if (networkError) {\n    if (networkError.statusCode === 403) {\n      console.warn('token 过期了.......');\n    }\n  }\n});\nconst httpLink = middlewareLink.concat(errorLink);\n\nVue.use(VueApollo);\n// 创建 apollo 客户端\nconst apolloProvider = new VueApollo({\n  defaultClient: new ApolloClient({\n    link: httpLink.concat(createHttpLink({\n      uri: process.env.VUE_APP_APOLLO_SRV_URL,\n    })),\n    cache: new InMemoryCache(),\n  }),\n});\n")])])],1),o("el-row",{staticClass:"content"},[o("p",[n._v("Apollo Query")]),o("vue-code",[o("pre",{attrs:{lang:"javascript"}},[n._v("  // 获取课程信息\nGET_LESSON_INFO(lessonType: string) {\n    let info = '';\n    switch (lessonType) {\n        case 'courseware':\n        info = 'courseware { url, name }';\n        break;\n        case 'cs_cover':\n        info = 'cs_cover { name, type, url, size, version }';\n        break;\n    }\n    return gql`query ($lesson_id: String!){\n      cms_getLessonInfo(lesson_id: $lesson_id){\n          id,  name, category { id, name, parent_id, datatype_id, definition_id },\n          ${info}\n        }\n    }`;\n},\n\n this.$apollo.query({\n    query: GET_LESSON_INFO(type),\n    variables: { lesson_id: this.lessonId },\n    fetchPolicy: 'no-cache'\n}).then(({ data }) => {\n    console.log(data.cms_getLessonInfo || {});\n}).catch(error => {\n    console.log(error);\n});\n")])])],1),o("el-row",{staticClass:"content"},[o("p",[n._v("Apollo Mutation")]),o("vue-code",[o("pre",{attrs:{lang:"javascript"}},[n._v("// 指定类别下增加教材\nSAVE_TEXTBOOK_BY_CATEGORY: gql`mutation cms_buildSchema($input: SchemaDefine!){\n        cms_buildSchema (input: $input){ \n            id,  content_data { name }, definition_id\n        } \n    }`\n\n// 保存引用,没有返回值\nCMS_SAVE_FILE_LINK: gql`mutation cms_saveFileLink($input: FileLink!){\n        cms_saveFileLink (input: $input)\n    }`\n\nthis.$apollo.mutate({\n        mutation: SAVE_TEXTBOOK_BY_CATEGORY,\n        variables: {\n        input: {\n            name: this.textBookForm.name,\n            display_label: this.textBookForm.label,\n            category: this.prdvalue,\n            maxCount: this.textBookForm.size\n        }\n    }\n}).then((res: any) => {\n    console.log(res.data.cms_buildSchema);\n}).catch(err => {\n    console.log(error);\n});\n")])])],1)],1)},t=[],i=o("2877"),a=function(n){n.options.__source="src/guide/views/web/VueApolloClient.vue"},l=a,s={},c=Object(i["a"])(s,r,t,!1,null,null,null);"function"===typeof l&&l(c);e["default"]=c.exports}}]);